{"componentChunkName":"component---src-templates-lesson-template-js","path":"/oak/oak-router","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Make sure you are on the oak-router branch and ensure that you are working in the \"exercise\" folder. If you get stuck, you can find the completed code for this section in the \"solution\" folder of the same branch.</p>\n</blockquote>\n<p>Oak contains prebuild Router middleware that will allow you to handle different routes, parameters and queries. It's basically doing a lot of string parsing and pattern matching that you would otherwise have to do yourself.</p>\n<ul>\n<li>\n<p>Include the \"Router\" object in the Oak import.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Application<span class=\"token punctuation\">,</span> Router <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"https://deno.land/x/oak/mod.ts\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Create a new \"Router\" instance below the \"Application\" instance.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Application</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Create a handler for a \"GET\" request to \"/\" - or the root route.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Application<span class=\"token punctuation\">,</span> Router <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"https://deno.land/x/oak/mod.ts\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Application</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\nctx<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">\"Welcome to Oak\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Tell the <code class=\"language-text\">app</code> object to use the <code class=\"language-text\">router</code> as middleware.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Application<span class=\"token punctuation\">,</span> Router <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"https://deno.land/x/oak/mod.ts\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Application</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\nctx<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">\"Welcome to Oak\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Now listening on http://0.0.0.0:3000</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0.0.0.0:3000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>Run the app with <code class=\"language-text\">deno run --allow-net app.ts</code></li>\n</ul>\n<p>You should see the same thing you had before - a simple page saying \"Hello Oak\". Note, though, that this route will only respond to the root route, and only if the request is a GET. Before, the application would respond to any request at all.</p>\n<h2 id=\"adding-additional-routes\" style=\"position:relative;\"><a href=\"#adding-additional-routes\" aria-label=\"adding additional routes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding additional routes</h2>\n<ul>\n<li>\n<p>Add an additional \"users\" route that responds to the \"/users\" route. It should come before the <code class=\"language-text\">app.use(router.routes())</code> line.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">router<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\nctx<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">\"Welcome to Oak\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\nctx<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Welcome User</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Add a third route which also listens to the \"/users\" route, but listens for an additional \"/name\" param and echos the value back out.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">router<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\nctx<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">\"Welcome to Oak\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\nctx<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Welcome User</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users/:name\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\nctx<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Welcome </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>ctx<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>Run the application again and test the different routes. Try passing in \"localhost:3000/users/YOUR_NAME\". It should be echoed back out to you.</li>\n</ul>\n<h2 id=\"organizing-routes-like-express\" style=\"position:relative;\"><a href=\"#organizing-routes-like-express\" aria-label=\"organizing routes like express permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Organizing routes like Express</h2>\n<p>The Express generator puts all the routes in files that correspond to their base route. For instance, the \"/\" routes are contained in the \"routes/index.js\" file. The \"/user\" routes are all contained in the \"routes/users.js\" file. In this section, you'll refactor your code to move the routes into their own folder.</p>\n<h3 id=\"creating-a-depsts-file\" style=\"position:relative;\"><a href=\"#creating-a-depsts-file\" aria-label=\"creating a depsts file permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating a deps.ts file</h3>\n<p>In order to do that, we're going to need to access our dependencies from more than one file. Instead of importing URL's all over the application, let's move all our imports into a single \"deps.ts\" file.</p>\n<ul>\n<li>Cut the Oak import line from the top of the \"app.ts\" file.</li>\n<li>Create a file in the root called \"deps.ts\"</li>\n<li>Paste in the Oak import</li>\n<li>\n<p>Export the <code class=\"language-text\">Application</code> and <code class=\"language-text\">Router</code> objects.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Application<span class=\"token punctuation\">,</span> Router <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"https://deno.land/x/oak/mod.ts\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> Application<span class=\"token punctuation\">,</span> Router <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>In the \"app.ts\" file, import the <code class=\"language-text\">Application</code> and <code class=\"language-text\">Router</code> objects from the \"deps.ts\" file</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Application<span class=\"token punctuation\">,</span> Router <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./deps.ts\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"creating-routes-files\" style=\"position:relative;\"><a href=\"#creating-routes-files\" aria-label=\"creating routes files permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating routes files</h3>\n<p>In order to specify routes in the route files, we need a reference to the router object that was initialized in the \"app.ts\" file. Deno supports having multiple routers. The easiest way to implement this is to make each route file create and export a new router object.</p>\n<ul>\n<li>Create a folder called \"routes\"</li>\n<li>Create a file called \"indexRouter.ts\" in the \"routes\" folder.</li>\n<li>\n<p>Import the \"Routes\" object from the \"deps.ts\" file</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Router <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"deps.ts\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Create a new instance of the router object</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Router <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"deps.ts\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Create a function called \"use\" which will accept a path and a route. We'll use that path and route to configure all of the index routes.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Context<span class=\"token punctuation\">,</span> Router <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../deps.ts\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>path<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> router<span class=\"token operator\">:</span> Router<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>Move the index route to this new \"indexRouter.ts\" file</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Context<span class=\"token punctuation\">,</span> Router <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../deps.ts\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> hbs <span class=\"token keyword\">from</span> <span class=\"token string\">\"../shared/hbs.ts\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>path<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> router<span class=\"token operator\">:</span> Router<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>path<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token operator\">:</span> Context<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  ctx<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token string\">\"Welcome to Oak\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We use the \"path\" variable and append all routes to that object. That's so that we can specify the path in the \"app.ts\" file for all our routers. As we add more and more routers, it's going to be important to know what router is handling what path by just by looking at the \"app.ts\" file.</p>\n</li>\n<li>\n<p>Import the new file as <code class=\"language-text\">indexRouter</code> at the top of the \"app.ts\" file</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Application<span class=\"token punctuation\">,</span> Router <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./deps.ts\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> indexRouter <span class=\"token keyword\">from</span> <span class=\"token string\">\"./routes/indexRouter.ts\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Tell the router to the \"/\" path and the existing \"router\" object.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">indexRouter<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/path\"</span><span class=\"token punctuation\">,</span> router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>Run the app again to make sure the index route still works.</li>\n<li>\n<p>Repeat the same thing for the \"user\" routes with a file called \"routes/userRouter.ts\". Your final \"app.ts\" should look like this...</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Application<span class=\"token punctuation\">,</span> Router <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./deps.ts\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> indexRouter <span class=\"token keyword\">from</span> <span class=\"token string\">\"./routes/indexRouter.ts\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> userRouter <span class=\"token keyword\">from</span> <span class=\"token string\">\"./routes/userRouter.ts\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Application</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nindexRouter<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nusersRouter<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users\"</span><span class=\"token punctuation\">,</span> router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Now listening on http://0.0.0.0:3000</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0.0.0.0:3000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<p>Now that we've got a proper routing structure in place, let's turn our attention to the next big problem to solve - and that's how to use templates to return HTML instead of just returning text.</p>","frontmatter":{"path":"/oak/oak-router","title":"The Oak Router","order":"7C","section":"Oak web framework","description":"Burke introduces the Oak web framework for Deno"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"1A","path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"order":"4E","path":"/dependencies/compatibility-with-node.md","title":"Compatibility With Node"}}},{"node":{"frontmatter":{"order":"4B","path":"/dependencies/local-dependencies.md","title":"Local dependencies"}}},{"node":{"frontmatter":{"order":"4D","path":"/dependencies/best-practices.md","title":"Best Practices"}}},{"node":{"frontmatter":{"order":"4C","path":"/dependencies/remote-dependencies.md","title":"Remote dependencies"}}},{"node":{"frontmatter":{"order":"4A","path":"/dependencies/think-like-a-browser.md","title":"Thinking like a browser"}}},{"node":{"frontmatter":{"order":"8A","path":"/oak/deploying","title":"Finding a Host"}}},{"node":{"frontmatter":{"order":"3E","path":"/getting-to-know/arguments-and-flags","title":"CLI Tour"}}},{"node":{"frontmatter":{"order":"3F","path":"/getting-to-know/debugging","title":"Debugging"}}},{"node":{"frontmatter":{"order":"3C","path":"/getting-to-know/deno-object","title":"The Deno object"}}},{"node":{"frontmatter":{"order":"3D","path":"/getting-to-know/first-program","title":"Your first program"}}},{"node":{"frontmatter":{"order":"3A","path":"/getting-to-know/install","title":"Installing Deno"}}},{"node":{"frontmatter":{"order":"3B","path":"/getting-to-know/tooling","title":"Tooling"}}},{"node":{"frontmatter":{"order":"7A","path":"/oak/introducing-oak","title":"Introducing Oak"}}},{"node":{"frontmatter":{"order":"7C","path":"/oak/oak-router","title":"The Oak Router"}}},{"node":{"frontmatter":{"order":"7C","path":"/oak/oak-templates","title":"Templates"}}},{"node":{"frontmatter":{"order":"7B","path":"/oak/simple-oak","title":"A Simple Oak Server"}}},{"node":{"frontmatter":{"order":"7E","path":"/oak/simple-oak","title":"Servering Static Files"}}},{"node":{"frontmatter":{"order":"5D","path":"/permissions/determining-permissions","title":"Determining Permissions"}}},{"node":{"frontmatter":{"order":"5A","path":"/permissions/granting-permissions","title":"Granting Permissions"}}},{"node":{"frontmatter":{"order":"5C","path":"/permissions/permission-specificity","title":"Permission Specificity"}}},{"node":{"frontmatter":{"order":"5B","path":"/permissions/requesting-permissions","title":"Requesting Permissions"}}},{"node":{"frontmatter":{"order":"6D","path":"/webserver/handling-routes","title":"Handling Routes"}}},{"node":{"frontmatter":{"order":"6B","path":"/webserver/reading-parameters","title":"Reading the query string"}}},{"node":{"frontmatter":{"order":"6A","path":"/webserver/simple","title":"Building a simple webserver"}}},{"node":{"frontmatter":{"order":"6C","path":"/webserver/static-files","title":"Servering up static files"}}},{"node":{"frontmatter":{"order":"2C","path":"/what-is/dependency-hell","title":"Dependency Hell"}}},{"node":{"frontmatter":{"order":"2B","path":"/what-is/secure-by-default","title":"Secure By Default"}}},{"node":{"frontmatter":{"order":"2D","path":"/what-is/typescript-first","title":"TypeScript First"}}},{"node":{"frontmatter":{"order":"2A","path":"/what-is/why-oh-why","title":"Why"}}}]}},"pageContext":{}},"staticQueryHashes":["2959687377"]}